{"version":3,"file":"mat-select-autocomplete.js","sources":["mat-select-autocomplete/lib/select-autocomplete.service.ts","mat-select-autocomplete/lib/select-autocomplete.component.ts","mat-select-autocomplete/lib/select-autocomplete.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectAutocompleteService {\n\n  constructor() { }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n  DoCheck\n} from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"mat-select-autocomplete\",\n  template: `\n    <mat-form-field appearance=\"{{ appearance }}\">\n      <mat-select\n        #selectElem\n        [placeholder]=\"placeholder\"\n        [formControl]=\"formControl\"\n        [multiple]=\"multiple\"\n        [(ngModel)]=\"selectedValue\"\n        (selectionChange)=\"onSelectionChange($event)\"\n      >\n        <div class=\"box-search\">\n          <mat-checkbox\n            *ngIf=\"multiple\"\n            color=\"primary\"\n            class=\"box-select-all\"\n            [(ngModel)]=\"selectAllChecked\"\n            (change)=\"toggleSelectAll($event)\"\n          ></mat-checkbox>\n          <input\n            #searchInput\n            type=\"text\"\n            [ngClass]=\"{ 'pl-1': !multiple }\"\n            (input)=\"filterItem(searchInput.value)\"\n            [placeholder]=\"selectPlaceholder\"\n          />\n          <div\n            class=\"box-search-icon\"\n            (click)=\"filterItem(''); searchInput.value = ''\"\n          >\n            <button mat-icon-button class=\"search-button\">\n              <mat-icon class=\"mat-24\" aria-label=\"Search icon\">clear</mat-icon>\n            </button>\n          </div>\n        </div>\n        <mat-select-trigger>\n          {{ onDisplayString() }}\n        </mat-select-trigger>\n        <mat-option\n          *ngFor=\"let option of options; trackBy: trackByFn\"\n          [disabled]=\"option.disabled\"\n          [value]=\"option[value]\"\n          [style.display]=\"hideOption(option) ? 'none' : 'flex'\"\n          >{{ option[display] }}\n        </mat-option>\n      </mat-select>\n      <mat-hint style=\"color:red\" *ngIf=\"showErrorMsg\">{{ errorMsg }}</mat-hint>\n    </mat-form-field>\n  `,\n  styles: [\n    `\n      .box-search {\n        margin: 8px;\n        border-radius: 2px;\n        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16),\n          0 0 0 1px rgba(0, 0, 0, 0.08);\n        transition: box-shadow 200ms cubic-bezier(0.4, 0, 0.2, 1);\n        display: flex;\n      }\n      .box-search input {\n        flex: 1;\n        border: none;\n        outline: none;\n      }\n      .box-select-all {\n        width: 36px;\n        line-height: 33px;\n        color: #808080;\n        text-align: center;\n      }\n      .search-button {\n        width: 36px;\n        height: 36px;\n        line-height: 33px;\n        color: #808080;\n      }\n      .pl-1 {\n        padding-left: 1rem;\n      }\n    `\n  ]\n})\nexport class SelectAutocompleteComponent implements OnChanges, DoCheck {\n  @Input() selectPlaceholder: string = \"search...\";\n  @Input() placeholder: string;\n  @Input() options;\n  @Input() disabled = false;\n  @Input() display = \"display\";\n  @Input() value = \"value\";\n  @Input() formControl: FormControl = new FormControl();\n  @Input() errorMsg: string = \"Field is required\";\n  @Input() showErrorMsg = false;\n  @Input() selectedOptions;\n  @Input() multiple = true;\n\n  // New Options\n  @Input() labelCount: number = 1;\n  @Input() appearance: \"standard\" | \"fill\" | \"outline\" = \"standard\";\n\n  @Output()\n  selectionChange: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(\"selectElem\") selectElem;\n\n  filteredOptions: Array<any> = [];\n  selectedValue: Array<any> = [];\n  selectAllChecked = false;\n  displayString = \"\";\n  constructor() {}\n\n  ngOnChanges() {\n    if (this.disabled) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n    this.filteredOptions = this.options;\n    if (this.selectedOptions) {\n      this.selectedValue = this.selectedOptions;\n    } else if (this.formControl.value) {\n      this.selectedValue = this.formControl.value;\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.selectedValue.length) {\n      this.selectionChange.emit(this.selectedValue);\n    }\n  }\n\n  toggleDropdown() {\n    this.selectElem.toggle();\n  }\n\n  toggleSelectAll(val) {\n    if (val.checked) {\n      this.filteredOptions.forEach(option => {\n        if (!this.selectedValue.includes(option[this.value])) {\n          this.selectedValue = this.selectedValue.concat([option[this.value]]);\n        }\n      });\n    } else {\n      const filteredValues = this.getFilteredOptionsValues();\n      this.selectedValue = this.selectedValue.filter(\n        item => !filteredValues.includes(item)\n      );\n    }\n    this.selectionChange.emit(this.selectedValue);\n  }\n\n  filterItem(value) {\n    this.filteredOptions = this.options.filter(\n      item => item[this.display].toLowerCase().indexOf(value.toLowerCase()) > -1\n    );\n    this.selectAllChecked = true;\n    this.filteredOptions.forEach(item => {\n      if (!this.selectedValue.includes(item[this.value])) {\n        this.selectAllChecked = false;\n      }\n    });\n    if (!this.filteredOptions.length) {\n      this.selectAllChecked = false;\n    }\n  }\n\n  hideOption(option) {\n    return !(this.filteredOptions.indexOf(option) > -1);\n  }\n\n  // Returns plain strings array of filtered values\n  getFilteredOptionsValues() {\n    const filteredValues = [];\n    this.filteredOptions.forEach(option => {\n      filteredValues.push(option.value);\n    });\n    return filteredValues;\n  }\n\n  onDisplayString() {\n    this.displayString = \"\";\n    if (this.selectedValue && this.selectedValue.length) {\n      let displayOption = [];\n      if (this.multiple) {\n        // Multi select display\n        for (let i = 0; i < this.labelCount; i++) {\n          displayOption[i] = this.options.filter(\n            option => option[this.value] === this.selectedValue[i]\n          )[0];\n        }\n        if (displayOption.length) {\n          for (let i = 0; i < displayOption.length; i++) {\n            if (displayOption[i] && displayOption[i][this.display]) {\n              this.displayString += displayOption[i][this.display] + \",\";\n            }\n          }\n          this.displayString = this.displayString.slice(0, -1);\n          if (\n            this.selectedValue.length > 1 &&\n            this.selectedValue.length > this.labelCount\n          ) {\n            this.displayString += ` (+${this.selectedValue.length -\n              this.labelCount} others)`;\n          }\n        }\n      } else {\n        // Single select display\n        displayOption = this.options.filter(\n          option => option[this.value] === this.selectedValue\n        );\n        if (displayOption.length) {\n          this.displayString = displayOption[0][this.display];\n        }\n      }\n    }\n    return this.displayString;\n  }\n\n  onSelectionChange(val) {\n    const filteredValues = this.getFilteredOptionsValues();\n    let count = 0;\n    if (this.multiple) {\n      this.selectedValue.filter(item => {\n        if (filteredValues.includes(item)) {\n          count++;\n        }\n      });\n      this.selectAllChecked = count === this.filteredOptions.length;\n    }\n    this.selectedValue = val.value;\n    this.selectionChange.emit(this.selectedValue);\n  }\n\n  public trackByFn(index, item) {\n    return item.value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { SelectAutocompleteComponent } from './select-autocomplete.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [SelectAutocompleteComponent],\n  exports: [SelectAutocompleteComponent]\n})\nexport class SelectAutocompleteModule { }\n"]}